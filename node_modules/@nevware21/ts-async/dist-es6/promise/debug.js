import { objDefineProp } from "@nevware21/ts-utils";
let _debugState;
let _debugResult;
let _debugHandled;
export let _promiseDebugEnabled = false;
let _theLogger = null;
export function _debugLog(id, message) {
}
export function _addDebugState(thePromise, stateFn, resultFn, handledFn) {
    _debugState = _debugState || { toString: () => "[[PromiseState]]" };
    _debugResult = _debugResult || { toString: () => "[[PromiseResult]]" };
    _debugHandled = _debugHandled || { toString: () => "[[PromiseIsHandled]]" };
    objDefineProp(thePromise, _debugState, { get: stateFn });
    objDefineProp(thePromise, _debugResult, { get: resultFn });
    objDefineProp(thePromise, _debugHandled, { get: handledFn });
}
export function setPromiseDebugState(enabled, logger) {
    _promiseDebugEnabled = enabled;
    _theLogger = logger;
}
//# sourceMappingURL=debug.js.map