import { getLazy } from "@nevware21/ts-utils";
import { _createAllPromise, _createRejectedPromise, _createResolvedPromise } from "./base";
import { createNativePromise } from "./nativePromise";
let _promiseCreator;
export function setCreatePromiseImpl(creator) {
    _promiseCreator = creator ? getLazy(() => creator) : null;
}
export function createPromise(executor, timeout) {
    !_promiseCreator && (_promiseCreator = getLazy(() => createNativePromise));
    return _promiseCreator.v.call(this, executor, timeout);
}
export const createAllPromise = _createAllPromise(createPromise);
export const createResolvedPromise = _createResolvedPromise(createPromise);
export const createRejectedPromise = _createRejectedPromise(createPromise);
//# sourceMappingURL=promise.js.map