{"version":3,"file":"polyfills.js","sourceRoot":"","sources":["../src/polyfills.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,0BAA0B,EAAE,MAAM,wBAAwB,CAAC;AACvH,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAIlD,CAAC;IACG,IAAM,gBAAgB,GAAG;QACrB,KAAK,EAAE,qBAAqB;QAC5B,UAAU,EAAE,0BAA0B;QACtC,UAAU,EAAE,0BAA0B;KACzC,CAAC;IAEF,IAAI,CAAC,OAAO,EAAE;QACV,OAAO,GAAG,WAAW,CAAC;KACzB;SAAM;QACH,uBAAuB;QACvB,IAAI,cAAY,GAAG,OAAO,CAAC;QAC3B,IAAI,cAAY,EAAE;YACd,aAAa,CAAC,gBAAgB,EAAE,UAAC,GAAG,EAAE,KAAK;gBACvC,IAAI,CAAC,cAAY,CAAC,GAAG,CAAC,EAAE;oBACpB,cAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;iBAC7B;YACL,CAAC,CAAC,CAAC;SACN;KACJ;AACL,CAAC,CAAC,EAAE,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-async\r\n * https://github.com/nevware21/ts-async\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { createAsyncAllPromise, createAsyncRejectedPromise, createAsyncResolvedPromise } from \"./promise/asyncPromise\";\r\nimport { objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { PolyPromise } from \"./polyfills/promise\";\r\n\r\ndeclare var Promise: any;\r\n\r\n(function () {\r\n    const promisePolyfills = {\r\n        \"all\": createAsyncAllPromise,\r\n        \"resolved\": createAsyncResolvedPromise,\r\n        \"rejected\": createAsyncRejectedPromise\r\n    };\r\n\r\n    if (!Promise) {\r\n        Promise = PolyPromise;\r\n    } else {\r\n        // Add Object polyfills\r\n        let PromiseClass = Promise;\r\n        if (PromiseClass) {\r\n            objForEachKey(promisePolyfills, (key, value) => {\r\n                if (!PromiseClass[key]) {\r\n                    PromiseClass[key] = value;\r\n                }\r\n            });\r\n        }\r\n    }\r\n})();\r\n"]}