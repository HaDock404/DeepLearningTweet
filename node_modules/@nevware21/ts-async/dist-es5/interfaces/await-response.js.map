{"version":3,"file":"await-response.js","sourceRoot":"","sources":["../../src/interfaces/await-response.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\r\n * @nevware21/ts-async\r\n * https://github.com/nevware21/ts-async\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\n/**\r\n * Simple interface to convert a promise then (resolve/reject) into a single response\r\n */\r\nexport interface AwaitResponse<T> {\r\n    /**\r\n     * The value returned by the resolved promise\r\n     */\r\n    value?: T;\r\n\r\n    /**\r\n     * Identifies if the promise was rejected (true) or was resolved (false/undefined)\r\n     */\r\n    rejected?: boolean;\r\n\r\n     /**\r\n     * The reason returned when the promise rejected\r\n     */\r\n    reason?: any;\r\n}\r\n"]}