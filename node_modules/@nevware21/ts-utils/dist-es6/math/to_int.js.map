{"version":3,"file":"to_int.js","sourceRoot":"","sources":["../../src/math/to_int.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,MAAM,SAAS,CAAC;AAEpC;;;;;;GAMG;AACH,wBAAwB;AACxB,MAAM,UAAU,SAAS,CAAC,KAAU,EAAE,aAAuB;IACzD,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC;IAEpB,IAAI,MAAM,IAAI,QAAQ,IAAI,aAAa,EAAE;QACrC,eAAe,CAAC,iBAAiB,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;KAC7D;IAED,OAAO,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACrE,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { dumpObj } from \"../helpers/diagnostics\";\r\nimport { throwRangeError } from \"../helpers/throw\";\r\nimport { mathTrunc } from \"./trunc\";\r\n\r\n/**\r\n * Convert the provided value to an integer\r\n * @group Math\r\n * @param value - The value to be converted to an integer.\r\n * @param throwInfinity - [Optional] Throws RangeError if value is Infinity, defaults to false\r\n * @returns The value converted to an integer\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function mathToInt(value: any, throwInfinity?: boolean): number {\r\n    let result = +value;\r\n\r\n    if (result == Infinity && throwInfinity) {\r\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\r\n    }\r\n    \r\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\r\n}"]}