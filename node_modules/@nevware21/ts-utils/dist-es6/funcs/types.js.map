{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/funcs/types.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2023 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nexport type TypeFuncNames<T> = {\r\n    [key in keyof T]: T[key] extends Function ? key : never\r\n}[keyof T];\r\n\r\n/**\r\n * The Definition of how proxy functions should be applied to target objects\r\n */\r\nexport type ProxyFunctionDef<T, H> = {\r\n    /**\r\n     * Identifies the host function name\r\n     */\r\n    n: TypeFuncNames<H>,\r\n\r\n    /**\r\n     * Use this name as on the target for the proxied function, defaults to the same\r\n     * as the host function when not defined.\r\n     */\r\n    as?: TypeFuncNames<T>,\r\n\r\n    /**\r\n     * If the target already includes the function should it be replaced, defaults to false.\r\n     */\r\n    rp?: boolean\r\n}\r\n"]}