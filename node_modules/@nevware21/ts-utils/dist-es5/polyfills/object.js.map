{"version":3,"file":"object.js","sourceRoot":"","sources":["../../src/polyfills/object.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C;;;;;;;GAOG;AACH,wBAAwB;AACxB,MAAM,UAAU,WAAW,CAAC,GAAQ;IAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,UAAU,EAAE;QACtC,cAAc,CAAC,kCAAkC,CAAC,CAAC;KACtD;IAED,IAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,KAAK,IAAM,IAAI,IAAI,GAAG,EAAE;QACpB,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;KACJ;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,wBAAwB;AACxB,MAAM,UAAU,cAAc,CAAU,KAA6C;IACjF,IAAI,MAAM,GAAkB,EAAE,CAAC;IAE/B,aAAa,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,KAAK;QAC5B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,wBAAwB;AACxB,MAAM,UAAU,aAAa,CAAU,KAA6C;IAChF,IAAI,MAAM,GAAQ,EAAE,CAAC;IAErB,aAAa,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,KAAK;QAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAClB,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { isObject } from \"../helpers/base\";\r\nimport { throwTypeError } from \"../helpers/throw\";\r\nimport { NULL_VALUE } from \"../internal/constants\";\r\nimport { objForEachKey } from \"../object/for_each_key\";\r\nimport { objHasOwn } from \"../object/has_own\";\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers\r\n * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @group Polyfill\r\n * @group Object\r\n * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function polyObjKeys(obj: any): string[] {\r\n    if (!isObject(obj) || obj === NULL_VALUE) {\r\n        throwTypeError(\"polyObjKeys called on non-object\");\r\n    }\r\n\r\n    const result: string[] = [];\r\n    for (const prop in obj) {\r\n        if (objHasOwn(obj, prop)) {\r\n            result.push(prop);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns an array of key/values of the enumerable properties of an object\r\n * @since 0.9.7\r\n * @group Polyfill\r\n * @group Object\r\n * @group ArrayLike\r\n * @param value Object that contains the properties and methods.\r\n * @example\r\n * ```ts\r\n * polyObjEntries({ Hello: \"Darkness\", my: \"old\", friend: \".\" });\r\n * // [ [ \"Hello\", \"Darkness\" ], [ \"my\", \"old\"], [ \"friend\", \".\" ] ]\r\n *\r\n * // Array-like object\r\n * polyObjEntries({ 0: \"a\", 1: \"b\", 2: \"c\" }));\r\n * // [ ['0', 'a'], ['1', 'b'], ['2', 'c'] ]\r\n *\r\n * // Array-like object with random key ordering\r\n * polyObjEntries({ 100: \"a\", 2: \"b\", 7: \"c\" });\r\n * // [ ['2', 'b'], ['7', 'c'], ['100', 'a'] ]*\r\n * ```\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function polyObjEntries<T = any>(value: {} | { [s: string]: T } | ArrayLike<T>): [string, T][] {\r\n    let result: [string, T][] = [];\r\n\r\n    objForEachKey(value, (key, value) => {\r\n        result.push([key, value]);\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns an array of key/values of the enumerable properties of an object\r\n * @since 0.9.7\r\n * @group Polyfill\r\n * @group Object\r\n * @group ArrayLike\r\n * @param value Object that contains the properties and methods.\r\n * @example\r\n * ```ts\r\n * polyObjValues({ Hello: \"Darkness\", my: \"old\", friend: \".\" });\r\n * // [ \"Darkness\", \"old\", \".\" ]\r\n *\r\n * // Array-like object\r\n * polyObjValues({ 0: \"a\", 1: \"b\", 2: \"c\" }));\r\n * // [ 'a', 'b', 'c']\r\n *\r\n * // Array-like object with random key ordering\r\n * polyObjValues({ 100: \"a\", 2: \"b\", 7: \"c\" });\r\n * // [ 'b', 'c', 'a']\r\n * ```\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function polyObjValues<T = any>(value: {} | { [s: string]: T } | ArrayLike<T>): T[] {\r\n    let result: T[] = [];\r\n\r\n    objForEachKey(value, (key, value) => {\r\n        result.push(value);\r\n    });\r\n\r\n    return result;\r\n}"]}