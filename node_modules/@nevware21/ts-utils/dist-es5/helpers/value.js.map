{"version":3,"file":"value.js","sourceRoot":"","sources":["../../src/helpers/value.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AACvG,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAE/C,wBAAwB;AACxB,SAAS,YAAY,CAAC,KAAU,EAAE,KAAe;IAC7C,IAAI,MAAW,CAAC;IAEhB,UAAU,CAAC,KAAK,EAAE,UAAC,IAAI;QACnB,IAAI,IAAI,IAAI,KAAK,EAAE;YACf,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/D,OAAO,CAAC,CAAC,CAAC;SACb;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,wBAAwB;AACxB,SAAS,SAAS,CAAC,KAAU,EAAE,KAAa;IACxC,IAAI,MAAM,GAAG,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC;IAE5C,IAAI,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;QACtC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YAChB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC9B;aAAM,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;YACtB,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SACpC;aAAM,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,IAAI,CAAC;SACf;aAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACxB,IAAI;gBACA,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,EAAE,CAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;gBAC7E,IAAI,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACrB,OAAO,QAAQ,CAAC;iBACnB;gBAED,IAAI,UAAU,CAAE,KAAa,CAAC,OAAO,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACjD,OAAO,SAAS,CAAE,KAAa,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;iBACvD;aACJ;YAAC,OAAO,CAAC,EAAE;gBACR,6DAA6D;aAChE;YAED,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;SACnC;aAAM;YACH,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC5B;KACJ;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2GG;AACH,wBAAwB;AACxB,MAAM,UAAU,QAAQ,CAAC,KAAU;IAC/B,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { arrForEach } from \"../array/forEach\";\r\nimport { isArray, isBoolean, isDate, isFunction, isNullOrUndefined, isObject, isTruthy } from \"./base\";\r\nimport { objKeys } from \"../object/object\";\r\nimport { LENGTH } from \"../internal/constants\";\r\n\r\n/*#__NO_SIDE_EFFECTS__*/\r\nfunction _checkLength(value: any, props: string[]) {\r\n    let result: any;\r\n\r\n    arrForEach(props, (prop) => {\r\n        if (prop in value) {\r\n            let propValue = value[prop];\r\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\r\n            return -1;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/*#__NO_SIDE_EFFECTS__*/\r\nfunction _hasValue(value: any, depth: number): boolean {\r\n    let result = value === false || value === 0;\r\n\r\n    if (!result && !isNullOrUndefined(value)) {\r\n        if (isArray(value)) {\r\n            result = value[LENGTH] > 0;\r\n        } else if (isDate(value)) {\r\n            result = !isNaN(value.getTime());\r\n        } else if (isBoolean(value)) {\r\n            return true;\r\n        } else if (isObject(value)) {\r\n            try {\r\n                let chkValue = _checkLength(value, [ LENGTH, \"byteLength\", \"size\", \"count\"]);\r\n                if (isBoolean(chkValue)) {\r\n                    return chkValue;\r\n                }\r\n    \r\n                if (isFunction((value as any).valueOf) && depth < 5) {\r\n                    return _hasValue((value as any).valueOf(), ++depth);\r\n                }\r\n            } catch (e) {\r\n                // Best effort to try calling functions and lookup properties\r\n            }\r\n\r\n            return !!objKeys(value)[LENGTH];\r\n        } else {\r\n            result = isTruthy(value);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Return whether the value appears to have any `value`, this helper returns true for\r\n * - value is not null, undefined or string value of \"undefined\"\r\n * - value === false\r\n * - value === 0\r\n * - An array with a length >= 1\r\n * - A valid Date\r\n * - If object has a `length` property or function and the returned value.length or value.length() !== 0\r\n * - If object has a `byteLength` property or function and the returned value.byteLength or value.byteLength() !== 0\r\n * - If object has a `size` property or function and the returned value.size or value.size() !== 0\r\n * - If object has a `valueOf` function then the returned value hasValue(value.valueOf()) to a maximum recursion of 5 levels\r\n * - If object with at least 1 key of it's own property (hasOwnProperty)\r\n * - else if isTruthy (empty string, etc)\r\n * @group Value Check\r\n * @param value - The value to be checked\r\n * @example\r\n * ```ts\r\n * // False\r\n * hasValue(null);                              // false\r\n * hasValue(undefined);                         // false\r\n * hasValue(\"undefined\");                       // false (Special Case)\r\n * hasValue(\"\");                                // false -- use: !strIsNullOrEmpty(\"\")\r\n * hasValue([]);                                // false\r\n * hasValue(/[a-z]/g);                          // false\r\n * hasValue(new RegExp(\"\"));                    // false\r\n * hasValue(new ArrayBuffer(0));                // false\r\n * hasValue(new Error(\"Test Error\"));           // false\r\n * hasValue(new TypeError(\"Test TypeError\"));   // false\r\n * hasValue(new TestError(\"Test TestError\"));   // false\r\n * hasValue(Promise.reject());                  // false\r\n * hasValue(Promise.resolve());                 // false\r\n * hasValue(new Promise(() => {}));             // false\r\n * hasValue({});                                // false\r\n * hasValue(Object.create(null));               // false\r\n * hasValue(polyObjCreate(null));               // false\r\n *\r\n * // Objects with length / size property or function\r\n * hasValue({ length: 0 });                     // false\r\n * hasValue({ length: () => 0 });               // false\r\n * hasValue({ byteLength: 0 });                 // false\r\n * hasValue({ byteLength: () => 0 });           // false\r\n * hasValue({ size: 0 });                       // false\r\n * hasValue({ size: () => 0 });                 // false\r\n * hasValue({ count: 0 });                      // false\r\n * hasValue({ count: undefined as any });       // false\r\n * hasValue({ count: null as any });            // false\r\n * hasValue({ count: () => 0 });                // false\r\n * hasValue({ count: () => undefined as any }); // false\r\n * hasValue({ count: () => null as any });      // false\r\n * hasValue({ valueOf: () => undefined as any});// false\r\n * hasValue({ valueOf: () => null as any });    // false\r\n\r\n * // True\r\n * hasValue(\"null\");                    // true\r\n * hasValue(\"0\");                       // true\r\n * hasValue(\"1\");                       // true\r\n * hasValue(\"aa\");                      // true\r\n * hasValue(new Date());                // true\r\n * hasValue(0);                         // true\r\n * hasValue(1);                         // true\r\n * hasValue(_dummyFunction);            // true\r\n * hasValue([\"A\"]);                     // true\r\n * hasValue([0]);                       // true\r\n * hasValue([false]);                   // true\r\n * hasValue(new Array(1));              // true\r\n * hasValue(true);                      // true\r\n * hasValue(false);                     // true\r\n * hasValue(\"true\");                    // true\r\n * hasValue(\"false\");                   // true\r\n * hasValue((/[a-z]/g).exec(\"hello\"));  // true\r\n * hasValue(new ArrayBuffer(1));        // true\r\n * hasValue(_dummyError());             // true\r\n * hasValue(_simplePromise());          // true\r\n * hasValue(_simplePromiseLike());      // true\r\n *\r\n * // Boolean objects\r\n * hasValue(new Boolean(true));         // true\r\n * hasValue(new Boolean(false));        // true\r\n * hasValue(new Boolean(\"true\"));       // true\r\n * hasValue(new Boolean(\"false\"));      // true\r\n * hasValue(new Boolean(\"0\"));          // true\r\n * hasValue(new Boolean(0));            // true\r\n * hasValue(new Boolean(\"1\"));          // true\r\n * hasValue(new Boolean(1));            // true\r\n *\r\n * // Boolean values\r\n * hasValue(Boolean(true));             // true\r\n * hasValue(Boolean(false));            // true\r\n * hasValue(Boolean(\"true\"));           // true\r\n * hasValue(Boolean(\"false\"));          // true\r\n * hasValue(Boolean(\"0\"));              // true\r\n * hasValue(Boolean(0));                // true\r\n * hasValue(Boolean(\"1\"));              // true\r\n * hasValue(Boolean(1));                // true\r\n\r\n * // Objects with length / size property or function\r\n * hasValue({ length: 1 });             // true\r\n * hasValue({ length: () => 1 });       // true\r\n * hasValue({ byteLength: 1 });         // true\r\n * hasValue({ byteLength: () => 1 });   // true\r\n * hasValue({ size: 1 });               // true\r\n * hasValue({ size: () => 1 });         // true\r\n * hasValue({ count: 1 });              // true\r\n * hasValue({ count: () => 1 });        // true\r\n * hasValue({ valueOf: () => 0 });      // true\r\n * hasValue({ valueOf: () => 1 });      // true\r\n * ```\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nexport function hasValue(value: any): boolean {\r\n    return _hasValue(value, 0);\r\n}\r\n"]}