{"version":3,"file":"as_string.js","sourceRoot":"","sources":["../../src/string/as_string.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAE/C;;;;;;;;;;;;;;;;;;GAkBG;AACH,MAAM,CAAC,IAAM,QAAQ,GAA2B,MAAM,CAAC","sourcesContent":["/*\r\n * @nevware21/ts-utils\r\n * https://github.com/nevware21/ts-utils\r\n *\r\n * Copyright (c) 2022 Nevware21\r\n * Licensed under the MIT license.\r\n */\r\n\r\nimport { StrCls } from \"../internal/constants\";\r\n\r\n/**\r\n * The asString() method returns a string representing the value by\r\n * explicitly using `String(`value`)`.\r\n *\r\n * @since 0.4.3\r\n * @group String\r\n * @group Conversion\r\n * @group Value\r\n * @param value - The value to get a string representation of\r\n * @example\r\n * ```ts\r\n * const arr = [ 1, 2, 3];\r\n * asString(arr);       // \"1,2,3\"\r\n * asString(null);      // \"null\"\r\n * asString(undefined); // \"undefined\"\r\n * asString(42);        // \"42\"\r\n * asString(Symbol.for(\"Hello\"));   // \"Symbol(Hello)\"\r\n * ```\r\n */\r\nexport const asString: (value: any) => string = StrCls;\r\n"]}